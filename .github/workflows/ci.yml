name: CI Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    types: [ready_for_review, opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DOTNET_VERSION: 9.0.x

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      # sonar.login is for older version. Use sonar.token for new version
      - name: Sonarqube Begin
        run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
          -o:${{ secrets.ORG_KEY }} \
          -k:${{ secrets.PROJECT_KEY }} \
          -d:sonar.token=${{ secrets.SONAR_TOKEN }} \
          -s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml

      # Between the begin and end steps, you need to build your project, execute tests, and generate code coverage data.
      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --settings coverlet.runsettings --logger:trx

      # It cleans the MSBuild/dotnet build hooks, collects the analysis data generated by the build, the test results,
      # and the code coverage, and then uploads everything to SonarQube Server/Cloud
      - name: Sonarqube End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
